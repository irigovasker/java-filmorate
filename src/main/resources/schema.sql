CREATE TABLE IF NOT EXISTS "user"
(
    id       INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email    VARCHAR,
    login    VARCHAR,
    name     VARCHAR,
    birthday VARCHAR
);

CREATE TABLE IF NOT EXISTS "genre"
(
    id   INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR
);

CREATE TABLE IF NOT EXISTS "rating"
(
    id   INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR
);

CREATE TABLE IF NOT EXISTS "film"
(
    id           INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name         VARCHAR,
    description  VARCHAR,
    release_date VARCHAR,
    duration     INTEGER,
    rating_id    INTEGER REFERENCES "rating" (id) ON DELETE NO ACTION
);

CREATE TABLE IF NOT EXISTS "film_like"
(
    user_id INTEGER REFERENCES "user" (id) ON DELETE CASCADE,
    film_id INTEGER REFERENCES "film" (id) ON DELETE CASCADE,
    PRIMARY KEY (user_id, film_id)
);

CREATE TABLE IF NOT EXISTS "film_genre"
(
    film_id  INTEGER REFERENCES "film" (id) ON DELETE CASCADE,
    genre_id INTEGER REFERENCES "genre" (id) ON DELETE NO ACTION,
    primary key (film_id, genre_id)
);

CREATE TABLE IF NOT EXISTS "friendship_status"
(
    id     INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    status VARCHAR
);

CREATE TABLE IF NOT EXISTS "friendship"
(
    first_user INTEGER REFERENCES "user" (id) ON DELETE CASCADE,
    second_user INTEGER REFERENCES "user" (id) ON DELETE CASCADE,
    status    INTEGER REFERENCES "friendship_status" (id) ON DELETE CASCADE,
    PRIMARY KEY (first_user, second_user)
);