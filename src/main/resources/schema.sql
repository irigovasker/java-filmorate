CREATE TABLE IF NOT EXISTS "user"
(
    id       INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email    VARCHAR(30),
    login    VARCHAR(20),
    name     VARCHAR(20),
    birthday VARCHAR(15)
);

CREATE TABLE IF NOT EXISTS "genre"
(
    id   INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(15)
);

CREATE TABLE IF NOT EXISTS "rating"
(
    id   INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(10)
);

CREATE TABLE IF NOT EXISTS "director"
(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(30)
);

CREATE TABLE IF NOT EXISTS "film"
(
    id           INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name         VARCHAR(30),
    description  VARCHAR(100),
    release_date VARCHAR(15),
    duration     INTEGER,
    rating_id    INTEGER REFERENCES "rating" (id) ON DELETE NO ACTION
);

CREATE TABLE IF NOT EXISTS "film_like"
(
    user_id INTEGER REFERENCES "user" (id) ON DELETE CASCADE,
    film_id INTEGER REFERENCES "film" (id) ON DELETE CASCADE,
    PRIMARY KEY (user_id, film_id)
);

CREATE TABLE IF NOT EXISTS "film_genre"
(
    film_id  INTEGER REFERENCES "film" (id) ON DELETE CASCADE,
    genre_id INTEGER REFERENCES "genre" (id) ON DELETE NO ACTION,
    primary key (film_id, genre_id)
);

CREATE TABLE IF NOT EXISTS "film_director"
(
    film_id INTEGER REFERENCES "film"(id) ON DELETE CASCADE,
    director_id INTEGER REFERENCES "director"(id) ON DELETE CASCADE,
    primary key (film_id, director_id)
);

CREATE TABLE IF NOT EXISTS "friendship_status"
(
    id     INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    status VARCHAR(20)
);

CREATE TABLE IF NOT EXISTS "friendship"
(
    first_user INTEGER REFERENCES "user" (id) ON DELETE CASCADE,
    second_user INTEGER REFERENCES "user" (id) ON DELETE CASCADE,
    status    INTEGER REFERENCES "friendship_status" (id) ON DELETE CASCADE,
    PRIMARY KEY (first_user, second_user)
);

CREATE TABLE IF NOT EXISTS "review"
(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    content VARCHAR(200),
    is_positive BOOLEAN,
    user_id INTEGER REFERENCES "user" (id) ON DELETE CASCADE,
    film_id INTEGER REFERENCES "film" (id) ON DELETE CASCADE,
    useful INTEGER
);

CREATE TABLE IF NOT EXISTS "review_like"
(
    review_id INTEGER REFERENCES "review" (id) ON DELETE CASCADE,
    user_id INTEGER REFERENCES "user" (id) ON DELETE CASCADE,
    useful INTEGER,
    PRIMARY KEY (review_id, user_id)

);

CREATE TABLE IF NOT EXISTS "feed"
(
    event_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "TIMESTAMP" BIGINT,
    user_id INTEGER REFERENCES "user" (id) ON DELETE CASCADE,
    event_type VARCHAR(200),
    operation VARCHAR(200),
    entity_id INTEGER
);